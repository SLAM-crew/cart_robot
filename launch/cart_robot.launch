<launch>
    <arg name="rviz_conf_file" default="$(find cart_robot)/urdf/rviz_conf.rviz" />
    <param name="robot_description" command="xacro '$(find cart_robot)/urdf/robot_model.xacro'" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
        <param name="publish_frequency" type="double" value="40.0" />
        <remap from="/joint_states" to="/cart_robot/joint_states" />
    </node> 
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <rosparam command="load" file="$(find cart_robot)/config/ekf_localization.yaml" />
        <remap from="/odometry/filtered" to="/odom" />
    </node>
    <node name="orb_slam2_mono" pkg="orb_slam2_ros" type="orb_slam2_ros_mono">
        <rosparam command="load" subst_value="true" file="$(find cart_robot)/config/orb_slam2.yaml"/>
        <remap from="/camera/image_raw" to="/cart_robot/camera_main/image_raw" />
        <remap from="/camera/camera_info" to="/cart_robot/camera_main/camera_info" />
    </node>
    <node name="gmapping" pkg="gmapping" type="slam_gmapping">
        <remap from="/scan" to="/cart_robot/lidar_main"/>
    </node>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find cart_robot)/worlds/inspection.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>
    <node name="my_robot_model_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-urdf -param robot_description -model my_robot_model -x 1 -y 1 -z 0.2"/>
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_conf_file)" />
    <node pkg="aruco_detect" name="aruco_detect"
        type="aruco_detect" output="screen" respawn="false">
        <rosparam command="load" file="$(find cart_robot)/config/aruco_detect.yaml" />
        <remap from="camera/compressed" to="cart_robot/camera_main/image_raw/compressed"/>
        <remap from="camera_info" to="cart_robot/camera_main/camera_info"/>
    </node>
    <node name="convert_msgs_node" pkg="cart_robot" type="convert_msgs.py" ns="cart_robot"/>
    <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen" >
        <rosparam file="$(find cart_robot)/config/move_base/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find cart_robot)/config/move_base/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find cart_robot)/config/move_base/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find cart_robot)/config/move_base/global_costmap_params.yaml" command="load" /> 
        <rosparam file="$(find cart_robot)/config/move_base/base_local_planner_params.yaml" command="load" />
    </node>
</launch>